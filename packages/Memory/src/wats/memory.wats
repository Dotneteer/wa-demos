const uint WIDTH = 1200;
const uint HEIGHT = 800;

u8[WIDTH * HEIGHT * 4] image8;
u32[WIDTH * HEIGHT] image32 { image8 };

// Use 32-bit addressing
export void image1() {
  local int x;
  local int y;
  local int addr = 0;
  y = 0;
  while (y < HEIGHT) {
    x = 0;
    while (x < WIDTH) {
      x += 1;
      image32[addr] = 0xff000000 | u8(x+y) << 16 | u8(x-y);
      addr += 1;
    }
    y += 1;    
  }
}

// Use 8-bit addressing
export void image2() {
  local int x;
  local int y;
  local int addr = 0;
  y = 0;
  while (y < HEIGHT) {
    x = 0;
    while (x < WIDTH) {
      x += 1;
      image8[addr] = 0x00;
      image8[addr + 1] = x-y;
      image8[addr + 2] = x+y;
      image8[addr + 3] = 0xff;
      addr += 4;
    }
    y += 1;    
  }
}
